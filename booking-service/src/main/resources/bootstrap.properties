spring.cloud.config.uri=http://localhost:8888

management.endpoints.web.exposure.include=*
spring.cloud.config.profile=dev

spring.application.name=booking-service
server.port=0
eureka.instance.instance-id=${spring.application.name}:${random.uuid}

#Vault configuration
spring.cloud.vault.host=localhost
spring.cloud.vault.port=8200
spring.cloud.vault.scheme=http
spring.cloud.vault.authentication=token
spring.cloud.vault.token=00000000-0000-0000-0000-000000000000
spring.cloud.vault.application-name=booking-service

#RabbitMQ Configuration
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://localhost:8080/realms/mycompany-microservices-realm

#Do not no load balance. This will take care by eureka server and feign
spring.cloud.loadbalancer.ribbon.enabled=false